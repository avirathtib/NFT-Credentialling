{"ast":null,"code":"import _regeneratorRuntime from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/src/App.js\";\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport \"./styles.css\";\nimport VideoList from \"./Components/VideoList.js\";\nimport Form from \"./Components/Form.js\"; //#endregion\n\nexport var TitleContext = createContext();\nexport var LinkContext = createContext();\nexport var EndContext = createContext();\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoList = _useState2[0],\n      setVideoList = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentAccount = _useState4[0],\n      setCurrentAccount = _useState4[1]; // const nftCollection = useNFTCollection(\n  //   \"0x94cDDd0f2191F4c84d092713ae9024A9CCd476D4\"\n  // );\n  // const { data: nfts } = useNFTs(nftCollection);\n  // const { mutate: mintNFT } = useMintNFT(nftCollection);\n\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      url = _useState8[0],\n      setUrl = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disabled = _useState10[0],\n      setDisabled = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ended = _useState12[0],\n      setEnded = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      walletConnected = _useState14[0],\n      setWalletConnected = _useState14[1];\n\n  var checkIfWalletIsConnected = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _window, ethereum, accounts, account;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _window = window, ethereum = _window.ethereum;\n\n              if (ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              console.log(\"Make sure you have metamask!\");\n              return _context.abrupt(\"return\");\n\n            case 6:\n              console.log(\"We have the ethereum object\", ethereum);\n\n            case 7:\n              _context.next = 9;\n              return ethereum.request({\n                method: \"eth_accounts\"\n              });\n\n            case 9:\n              accounts = _context.sent;\n\n              if (accounts.length !== 0) {\n                account = accounts[0];\n                console.log(\"Found an authorized account:\", account);\n                setCurrentAccount(account);\n                setWalletConnected(true);\n              } else {\n                console.log(\"No authorized account found\");\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkIfWalletIsConnected() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //#endregion\n\n\n  var mintHandler = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setEnded(false);\n              _context2.next = 3;\n              return fetch(\"http://localhost:9000\", {\n                method: \"POST\",\n                headers: {\n                  \"content-type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                  title: title,\n                  account: currentAccount,\n                  url: url\n                })\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function mintHandler() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _window2, ethereum, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _window2 = window, ethereum = _window2.ethereum;\n\n              if (ethereum) {\n                _context3.next = 5;\n                break;\n              }\n\n              alert(\"Get MetaMask!\");\n              return _context3.abrupt(\"return\");\n\n            case 5:\n              _context3.next = 7;\n              return ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n\n            case 7:\n              accounts = _context3.sent;\n\n              /*\n               * Boom! This should print out public address once we authorize Metamask.\n               */\n              console.log(\"Connected\", accounts[0]);\n              setCurrentAccount(accounts[0]);\n              setDisabled(false); // setWalletConnected(true);\n\n              _context3.next = 16;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 13]]);\n    }));\n\n    return function connectWallet() {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //#endregion\n\n\n  var mintNFTContainer = function mintNFTContainer() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: mintHandler,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, \"Mint NFT\");\n  }; //#endregion\n\n\n  var videoPlayerArea = function videoPlayerArea() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      addVideo: addVideo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(VideoList, {\n      videoList: videoList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }));\n  }; //#endregion\n\n\n  var renderNotConnectedContainer = function renderNotConnectedContainer() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }\n    }, \"Connect to Wallet\");\n  };\n\n  var addVideo = function addVideo(video) {\n    console.log(video);\n    setVideoList([video]);\n    console.log(\"setState video\", video);\n  };\n\n  useEffect(function () {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/React.createElement(TitleContext.Provider, {\n    value: {\n      title: title,\n      setTitle: setTitle\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LinkContext.Provider, {\n    value: {\n      url: url,\n      setUrl: setUrl\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EndContext.Provider, {\n    value: {\n      ended: ended,\n      setEnded: setEnded\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, currentAccount === \"\" ? renderNotConnectedContainer() : /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Wallet connected with address \", currentAccount), /*#__PURE__*/React.createElement(Form, {\n    addVideo: addVideo,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(VideoList, {\n    videoList: videoList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), ended ? mintNFTContainer() : \"\", console.log(ended)))));\n};\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","createContext","VideoList","Form","TitleContext","LinkContext","EndContext","App","videoList","setVideoList","currentAccount","setCurrentAccount","title","setTitle","url","setUrl","disabled","setDisabled","ended","setEnded","walletConnected","setWalletConnected","checkIfWalletIsConnected","window","ethereum","console","log","request","method","accounts","length","account","mintHandler","fetch","headers","body","JSON","stringify","connectWallet","alert","mintNFTContainer","videoPlayerArea","addVideo","renderNotConnectedContainer","video"],"sources":["/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/src/App.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport \"./styles.css\";\nimport VideoList from \"./Components/VideoList.js\";\n\nimport Form from \"./Components/Form.js\";\n//#endregion\nexport const TitleContext = createContext();\nexport const LinkContext = createContext();\nexport const EndContext = createContext();\n\nconst App = () => {\n  const [videoList, setVideoList] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  // const nftCollection = useNFTCollection(\n  //   \"0x94cDDd0f2191F4c84d092713ae9024A9CCd476D4\"\n  // );\n  // const { data: nfts } = useNFTs(nftCollection);\n  // const { mutate: mintNFT } = useMintNFT(nftCollection);\n  const [title, setTitle] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  const [ended, setEnded] = useState(false);\n  const [walletConnected, setWalletConnected] = useState(false);\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n      setWalletConnected(true);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n  //#endregion\n  const mintHandler = async () => {\n    setEnded(false);\n    await fetch(\"http://localhost:9000\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({ title: title, account: currentAccount, url: url }),\n    });\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      /*\n       * Fancy method to request access to account.\n       */\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      /*\n       * Boom! This should print out public address once we authorize Metamask.\n       */\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      setDisabled(false);\n      // setWalletConnected(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  //#endregion\n\n  const mintNFTContainer = () => (\n    <button onClick={mintHandler}>Mint NFT</button>\n  );\n  //#endregion\n  const videoPlayerArea = () => (\n    <div>\n      <Form addVideo={addVideo} />\n      <VideoList videoList={videoList} />\n    </div>\n  );\n\n  //#endregion\n  const renderNotConnectedContainer = () => (\n    <button\n      onClick={connectWallet}\n      className=\"cta-button connect-wallet-button\"\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const addVideo = (video) => {\n    console.log(video);\n    setVideoList([video]);\n\n    console.log(\"setState video\", video);\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <TitleContext.Provider value={{ title, setTitle }}>\n      <LinkContext.Provider value={{ url, setUrl }}>\n        <EndContext.Provider value={{ ended, setEnded }}>\n          <div className=\"App\">\n            {currentAccount === \"\" ? (\n              renderNotConnectedContainer()\n            ) : (\n              <p>Wallet connected with address {currentAccount}</p>\n            )}\n            {/* {console.log(walletConnected)}\n            {walletConnected ? videoPlayerArea : \"\"} */}\n\n            <Form addVideo={addVideo} disabled={disabled} />\n            <VideoList videoList={videoList} />\n            {ended ? mintNFTContainer() : \"\"}\n            {console.log(ended)}\n          </div>\n        </EndContext.Provider>\n      </LinkContext.Provider>\n    </TitleContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}