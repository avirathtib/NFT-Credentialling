{"ast":null,"code":"import _regeneratorRuntime from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/src/App.js\";\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport YouTube from \"react-youtube\";\nimport \"./styles.css\";\nimport VideoList from \"./Components/VideoList.js\";\nimport Form from \"./Components/Form.js\";\nimport { TitleContext } from \"./index\";\nimport { LinkContext } from \"./index\";\nimport { EndContext } from \"./index\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoList = _useState2[0],\n      setVideoList = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentAccount = _useState4[0],\n      setCurrentAccount = _useState4[1];\n\n  var _useContext = useContext(LinkContext),\n      videoLink = _useContext.videoLink,\n      setVideoLink = _useContext.setVideoLink;\n\n  var _useContext2 = useContext(TitleContext),\n      title = _useContext2.title,\n      setTitle = _useContext2.setTitle;\n\n  var _useContext3 = useContext(EndContext),\n      ended = _useContext3.ended,\n      setEnded = _useContext3.setEnded;\n\n  var checkIfWalletIsConnected = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _window, ethereum, accounts, account;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _window = window, ethereum = _window.ethereum;\n\n              if (ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              console.log(\"Make sure you have metamask!\");\n              return _context.abrupt(\"return\");\n\n            case 6:\n              console.log(\"We have the ethereum object\", ethereum);\n\n            case 7:\n              _context.next = 9;\n              return ethereum.request({\n                method: \"eth_accounts\"\n              });\n\n            case 9:\n              accounts = _context.sent;\n\n              if (accounts.length !== 0) {\n                account = accounts[0];\n                console.log(\"Found an authorized account:\", account);\n                setCurrentAccount(account);\n              } else {\n                console.log(\"No authorized account found\");\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function checkIfWalletIsConnected() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var connectWallet = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _window2, ethereum, accounts;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _window2 = window, ethereum = _window2.ethereum;\n\n              if (ethereum) {\n                _context2.next = 5;\n                break;\n              }\n\n              alert(\"Get MetaMask!\");\n              return _context2.abrupt(\"return\");\n\n            case 5:\n              _context2.next = 7;\n              return ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n\n            case 7:\n              accounts = _context2.sent;\n\n              /*\n               * Boom! This should print out public address once we authorize Metamask.\n               */\n              console.log(\"Connected\", accounts[0]);\n              setCurrentAccount(accounts[0]);\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 12]]);\n    }));\n\n    return function connectWallet() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //#endregion\n\n\n  var mintNFTContainer = function mintNFTContainer() {\n    /*#__PURE__*/\n    React.createElement(\"button\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, \"Mint NFT\");\n  }; //#endregion\n\n\n  var renderNotConnectedContainer = function renderNotConnectedContainer() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: connectWallet,\n      className: \"cta-button connect-wallet-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, \"Connect to Wallet\");\n  };\n\n  var addVideo = function addVideo(video) {\n    console.log(video);\n    setVideoList([video]);\n    console.log(\"setState video\", video);\n  }; //#endregion\n\n\n  useEffect(function () {\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, currentAccount === \"\" ? renderNotConnectedContainer() : /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Wallet connected with address \", currentAccount), /*#__PURE__*/React.createElement(Form, {\n    addVideo: addVideo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VideoList, {\n    videoList: videoList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useContext","YouTube","VideoList","Form","TitleContext","LinkContext","EndContext","App","videoList","setVideoList","currentAccount","setCurrentAccount","videoLink","setVideoLink","title","setTitle","ended","setEnded","checkIfWalletIsConnected","window","ethereum","console","log","request","method","accounts","length","account","connectWallet","alert","mintNFTContainer","renderNotConnectedContainer","addVideo","video"],"sources":["/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport YouTube from \"react-youtube\";\nimport \"./styles.css\";\nimport VideoList from \"./Components/VideoList.js\";\nimport Form from \"./Components/Form.js\";\nimport { TitleContext } from \"./index\";\nimport { LinkContext } from \"./index\";\nimport { EndContext } from \"./index\";\n\nconst App = () => {\n  const [videoList, setVideoList] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  const { videoLink, setVideoLink } = useContext(LinkContext);\n  const { title, setTitle } = useContext(TitleContext);\n  const { ended, setEnded } = useContext(EndContext);\n\n  const checkIfWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have metamask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const { ethereum } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      /*\n       * Fancy method to request access to account.\n       */\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n\n      /*\n       * Boom! This should print out public address once we authorize Metamask.\n       */\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  //#endregion\n  const mintNFTContainer = () => {\n    <button>Mint NFT</button>;\n  };\n\n  //#endregion\n  const renderNotConnectedContainer = () => (\n    <button\n      onClick={connectWallet}\n      className=\"cta-button connect-wallet-button\"\n    >\n      Connect to Wallet\n    </button>\n  );\n\n  const addVideo = (video) => {\n    console.log(video);\n    setVideoList([video]);\n\n    console.log(\"setState video\", video);\n  };\n  //#endregion\n  useEffect(() => {\n    checkIfWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {currentAccount === \"\" ? (\n        renderNotConnectedContainer()\n      ) : (\n        <p>Wallet connected with address {currentAccount}</p>\n      )}\n      <Form addVideo={addVideo} />\n      <VideoList videoList={videoList} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}