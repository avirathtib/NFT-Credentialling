{"ast":null,"code":"import _slicedToArray from \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/src/Components/Form.js\";\n\nimport React, { useState, useRef, useContext } from \"react\";\nimport { TitleContext } from \"../index\";\nimport { LinkContext } from \"../index\";\n\nvar getYoutubeTitle = require(\"get-youtube-title\");\n\nvar Form = function Form(props) {\n  var videoUrl = useRef(); // const [videoLink, setVideoLink] = useState({});\n\n  var _useContext = useContext(LinkContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      videoLink = _useContext2[0],\n      setVideoLink = _useContext2[1]; // const [title, setTitle] = useState(null);\n\n\n  var _useContext3 = useContext(TitleContext),\n      _useContext4 = _slicedToArray(_useContext3, 2),\n      title = _useContext4[0],\n      setTitle = _useContext4[1];\n\n  var addVideo = function addVideo() {\n    var url = new URL(videoUrl.current.value);\n    var embedCode = url.searchParams.get(\"v\");\n    console.log(url.href);\n    props.addVideo({\n      url: embedCode\n    }); //#endregion\n\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n    setVideoLink(url.href);\n    var match = url.href.match(regExp);\n    var id = match && match[7].length == 11 ? match[7] : false;\n    getYoutubeTitle(id, function (err, title) {\n      setTitle(title);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: videoUrl,\n    placeholder: \"enter youtube url\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addVideo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\nexport default Form;","map":{"version":3,"names":["React","useState","useRef","useContext","TitleContext","LinkContext","getYoutubeTitle","require","Form","props","videoUrl","videoLink","setVideoLink","title","setTitle","addVideo","url","URL","current","value","embedCode","searchParams","get","console","log","href","regExp","match","id","length","err"],"sources":["/Users/avirathtibrewala/Desktop/Builds/yt-nft/youtube-final-project-api-forked/src/Components/Form.js"],"sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\nimport { TitleContext } from \"../index\";\nimport { LinkContext } from \"../index\";\nvar getYoutubeTitle = require(\"get-youtube-title\");\n\nconst Form = (props) => {\n  const videoUrl = useRef();\n  // const [videoLink, setVideoLink] = useState({});\n  const [videoLink, setVideoLink] = useContext(LinkContext);\n  // const [title, setTitle] = useState(null);\n  const [title, setTitle] = useContext(TitleContext);\n\n  const addVideo = () => {\n    let url = new URL(videoUrl.current.value);\n    const embedCode = url.searchParams.get(\"v\");\n    console.log(url.href);\n\n    props.addVideo({ url: embedCode });\n    //#endregion\n    var regExp =\n      /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n    setVideoLink(url.href);\n    var match = url.href.match(regExp);\n    const id = match && match[7].length == 11 ? match[7] : false;\n\n    getYoutubeTitle(id, function (err, title) {\n      setTitle(title);\n    });\n  };\n\n  return (\n    <div>\n      <input ref={videoUrl} placeholder=\"enter youtube url\" />\n      <button onClick={addVideo}>Submit</button>\n    </div>\n  );\n};\n\nexport default Form;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,UAAlC,QAAoD,OAApD;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,WAAT,QAA4B,UAA5B;;AACA,IAAIC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA7B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;EACtB,IAAMC,QAAQ,GAAGR,MAAM,EAAvB,CADsB,CAEtB;;EACA,kBAAkCC,UAAU,CAACE,WAAD,CAA5C;EAAA;EAAA,IAAOM,SAAP;EAAA,IAAkBC,YAAlB,mBAHsB,CAItB;;;EACA,mBAA0BT,UAAU,CAACC,YAAD,CAApC;EAAA;EAAA,IAAOS,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;IACrB,IAAIC,GAAG,GAAG,IAAIC,GAAJ,CAAQP,QAAQ,CAACQ,OAAT,CAAiBC,KAAzB,CAAV;IACA,IAAMC,SAAS,GAAGJ,GAAG,CAACK,YAAJ,CAAiBC,GAAjB,CAAqB,GAArB,CAAlB;IACAC,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,IAAhB;IAEAhB,KAAK,CAACM,QAAN,CAAe;MAAEC,GAAG,EAAEI;IAAP,CAAf,EALqB,CAMrB;;IACA,IAAIM,MAAM,GACR,2EADF;IAEAd,YAAY,CAACI,GAAG,CAACS,IAAL,CAAZ;IACA,IAAIE,KAAK,GAAGX,GAAG,CAACS,IAAJ,CAASE,KAAT,CAAeD,MAAf,CAAZ;IACA,IAAME,EAAE,GAAGD,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,IAAmB,EAA5B,GAAiCF,KAAK,CAAC,CAAD,CAAtC,GAA4C,KAAvD;IAEArB,eAAe,CAACsB,EAAD,EAAK,UAAUE,GAAV,EAAejB,KAAf,EAAsB;MACxCC,QAAQ,CAACD,KAAD,CAAR;IACD,CAFc,CAAf;EAGD,CAhBD;;EAkBA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAO,GAAG,EAAEH,QAAZ;IAAsB,WAAW,EAAC,mBAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE;IAAQ,OAAO,EAAEK,QAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAFF,CADF;AAMD,CA/BD;;AAiCA,eAAeP,IAAf"},"metadata":{},"sourceType":"module"}